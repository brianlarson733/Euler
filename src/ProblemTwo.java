/**
* Each new term in the Fibonacci sequence is generated by adding the previous
* two terms. By starting with 1 and 2, the first 10 terms will be: 1, 2, 3,
* 5, 8, 13, 21, 34, 55, 89, etc. By considering the terms in the Fibonacci
* sequence whose values do not exceed four million, find the sum of the 
* even-valued terms.
*/

import java.util.*;

public class ProblemTwo extends Problem {

	public ProblemTwo(){
		super("Each new term in the Fibonacci sequence is"
							+ " generated by adding the previous two terms."
							+ " By starting with 1 and 2, the first 10 terms"
							+ " will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89,"
							+ " etc. By considering the terms in the Fibonacci"
							+ " sequence whose values do not exceed four"
							+ " million, find the sum of the even-valued"
							+ " terms.");
	}

	public void solver(){
		
		System.out.print("I'll need an upper bound on the Fibonacci " 
						+ "numbers to be considered. ");
		int upperLimit = Tools.getWholeNumberInput();
		LinkedList<Integer> evenTerms = new LinkedList<Integer>();
		int a = 0;
		int b = 1;
		int c = 1;

		while (c < upperLimit) { 
			c = a + b;
			a = b;
			b = c;
			if (c % 2 == 0){
			evenTerms.add(c);
			}
		}

		System.out.println("The sum of the terms is " + Tools.sumLinkedList(evenTerms));
	}
}